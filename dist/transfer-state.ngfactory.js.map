{"version":3,"sources":["ng:///Users/adboul/Documents/repos/angular-universal-transfer-state/src/transfer-state.ts","../src/transfer-state.ngfactory.ts"],"names":[],"mappings":"AAAA;;;;GCIG;AACF,oBAAoB;;;;;;;;;;;;;AAGrB,uCAAyC;AACzC,0CAA4C;AAC5C,uCAAyC;AACzC;IAAyC,8CAAqD;IAG5F,oCAAY,MAAuB;eACjC,kBAAM,MAAM,EAAE,EAAY,EAAE,EAAY,CAAC;IAC3C,CAAC;IACD,sBAAI,uDAAe;aAAnB;YACE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,IAAI,IAAI,CAAC,CAAC,CAAC,CAAC;gBAAC,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,OAAO,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,EAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;YAAC,CAAC;YAClK,MAAM,CAAC,IAAI,CAAC,gBAAgB,CAAC;QAC/B,CAAC;;;OAAA;IACD,mDAAc,GAAd;QACE,IAAI,CAAC,qBAAqB,GAAG,IAAI,OAAO,CAAC,kBAAkB,EAAE,CAAC;QAC9D,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;IACpC,CAAC;IACD,gDAAW,GAAX,UAAY,KAAS,EAAC,cAAkB;QACtC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,CAAC;QAAC,CAAC;QAClF,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC;YAAC,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;QAAC,CAAC;QACtE,MAAM,CAAC,cAAc,CAAC;IACxB,CAAC;IACD,oDAAe,GAAf;IACA,CAAC;IACH,iCAAC;AAAD,CArBA,AAqBC,CArBwC,OAAO,CAAC,iBAAiB,GAqBjE;AACY,QAAA,2BAA2B,GAAuD,IAAI,OAAO,CAAC,eAAe,CAAM,0BAA0B,EAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC","file":"transfer-state.ngfactory.js","sourceRoot":"","sourcesContent":[" ","/**\n * @fileoverview This file is generated by the Angular template compiler.\n * Do not edit.\n * @suppress {suspiciousCode,uselessCode,missingProperties}\n */\n /* tslint:disable */\n\n\nimport * as import0 from '@angular/core';\nimport * as import1 from './transfer-state';\nimport * as import2 from '@angular/http';\nclass TransferHttpModuleInjector extends import0.ÉµNgModuleInjector<import1.TransferHttpModule> {\n  _TransferHttpModule_0:import1.TransferHttpModule;\n  __TransferHttp_1:import1.TransferHttp;\n  constructor(parent:import0.Injector) {\n    super(parent,([] as any[]),([] as any[]));\n  }\n  get _TransferHttp_1():import1.TransferHttp {\n    if ((this.__TransferHttp_1 == null)) { (this.__TransferHttp_1 = new import1.TransferHttp(this.parent.get(import2.Http),this.parent.get(import1.TransferState))); }\n    return this.__TransferHttp_1;\n  }\n  createInternal():import1.TransferHttpModule {\n    this._TransferHttpModule_0 = new import1.TransferHttpModule();\n    return this._TransferHttpModule_0;\n  }\n  getInternal(token:any,notFoundResult:any):any {\n    if ((token === import1.TransferHttpModule)) { return this._TransferHttpModule_0; }\n    if ((token === import1.TransferHttp)) { return this._TransferHttp_1; }\n    return notFoundResult;\n  }\n  destroyInternal():void {\n  }\n}\nexport const TransferHttpModuleNgFactory:import0.NgModuleFactory<import1.TransferHttpModule> = new import0.NgModuleFactory<any>(TransferHttpModuleInjector,import1.TransferHttpModule);\n\n"]}