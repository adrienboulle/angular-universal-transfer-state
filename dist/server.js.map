{"version":3,"sources":["../src/server.ts"],"names":[],"mappings":"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","file":"server.js","sourceRoot":"","sourcesContent":["import { Injectable, Optional, RendererFactory2, ViewEncapsulation, NgModule } from '@angular/core';\nimport { PlatformState } from '@angular/platform-server';\nimport { TransferState } from './transfer-state';\n\nexport function isTag(tagName: string, node: any): boolean {\n  return node.type === 'tag' && node.name === tagName;\n}\n\n\nexport class ServerTransferState extends TransferState {\n    constructor( private state: PlatformState, private rendererFactory: RendererFactory2) {\n      super();\n    }\n\n  /**\n   * Inject the State into the bottom of the <head>\n   */\n  inject(location?: string) {\n    try {\n      const document: any = this.state.getDocument();\n      const transferStateString = JSON.stringify(this.toJson());\n      const renderer = this.rendererFactory.createRenderer(document, {\n        id: '-1',\n        encapsulation: ViewEncapsulation.None,\n        styles: [],\n        data: {}\n      });\n\n\n      let rootNode: any = undefined;\n      let bodyNode: any = undefined;\n      let headNode: any = undefined;\n\n      // let titleNode: any = undefined;\n\n      for (let i: number = 0; i < document.childNodes.length; ++i) {\n        const child = document.childNodes[i];\n\n        if (isTag('html', child)) {\n          rootNode = child;\n          break;\n        }\n      }\n\n      if (!rootNode) {\n        rootNode = document;\n      }\n\n\n      for (let i: number = 0; i < rootNode.childNodes.length; ++i) {\n       const child = rootNode.childNodes[i];\n\n        if (isTag('head', child)) {\n          headNode = child;\n        }\n        if (isTag('body', child)) {\n          bodyNode = child;\n        }\n      }\n\n      const body = location === 'head' ? headNode : bodyNode;\n\n      const script = renderer.createElement('script');\n      renderer.setValue(script, `\ntry {\n  window['${ TransferState.KEY }'] = ${ transferStateString }\n} catch (e) {\n  console.log('Angular Universal: There was a problem parsing the server data during rehydrate');\n}\n      `);\n      renderer.appendChild(body, script);\n      renderer.setAttribute(script, 'angular', 'universal');\n      rootNode = undefined;\n      bodyNode = undefined;\n      headNode = undefined;\n    } catch (e) {\n      console.error(e);\n    }\n  }\n\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: Injectable },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n{type: PlatformState, },\n{type: RendererFactory2, },\n];\n}\n\n\n\nexport class ServerTransferStateModule {\n\nstatic decorators: DecoratorInvocation[] = [\n{ type: NgModule, args: [{\n  providers: [\n    { provide: TransferState, useClass: ServerTransferState }\n  ]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\n}\n\n\nexport { TransferState, TransferHttp, TransferHttpModule } from './transfer-state';\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}